@page "/dictionary/{labelName}"
@inject HttpClient Http
@inject BusinessDictionaryService BusinessDictionaryService

@using businessDictionary.Components.Pages.Dictionary.TagModal
@using businessDictionary.Components.Pages.Dictionary.TagsTable
@using businessDictionary.services

<PageTitle>Dictionary</PageTitle>

<div class="d-flex flex-column-reverse flex-sm-row justify-content-between">
    <div class="d-flex align-items-center justify-content-center">
        <input placeholder="search" class="form-control" />
    </div>
    <TagModal />
</div>
<div class="mt-5 d-flex flex-column flex-md-row">
    @if (tagData != null)
    {

        <TagsTable terms="tagData.items" />
        
    }else
    {
        <p>Loading...</p>
    }
    <div></div>
</div>

@code {
    [Parameter] public string labelName { get; set; }
    private Tags tagData;
    private bool isLoading = true;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (!string.IsNullOrEmpty(labelName))
            {
                tagData = await BusinessDictionaryService.GetBusinessTags();
            }
            else
            {
                errorMessage = "Tag not found!";
            }

            isLoading = false;
        }
        catch (Exception ex)
        {
            errorMessage = $"Error fetching data: {ex.Message}";
            isLoading = false;
        }
    }
}
